$ssh_token_script = <<-SCRIPT
bash -c 'vagrant ssh -c "sudo cat /var/lib/rancher/k3s/server/node-token" lnoisomeS > ./k3s_token'
SCRIPT

$master_script = <<-SCRIPT
# В нем происходит установка кубера k3s и установка net-tools в нашем случае для того чтобы на centos появилась ifconfig который нам позволит узнавать
# что у нас действительно тот ip который заявлен в задании 
sed -i 's/mirrorlist/#mirrorlist/g' /etc/yum.repos.d/CentOS-Linux-*
sed -i 's|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' /etc/yum.repos.d/CentOS-Linux-*
sudo dnf install centos-release-stream -y
sudo dnf swap centos-{linux,stream}-repos -y
sudo dnf distro-sync -y
sudo yum -y install net-tools # для установки сетевых утилит в том числе ifconfig

curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC="--write-kubeconfig-mode 644 --flannel-iface eth1" sh - # скачка бинарника, установка флагов и старт через sh
# --write-kubeconfig-mode 644 - Этот флаг разблокирует функцию чтобы можно было сделать k get nodes, что нужно по заданию для того чтобы посмотреть что получился кластер и в нем есть компьютеры
# --flannel-iface eth1 - Означает что у нас будет использоваться в качестве сети для нашего кубернетиса именно eth1, а eth1 это ничто иное как ip 192.168.42.110

echo 'alias k="kubectl"' >>./.bashrc # просто alias для того чтобы команды исполнять как написано в сабжекте типа k get nodes -o wide
SCRIPT

$worker_script = <<-SCRIPT
sed -i 's/mirrorlist/#mirrorlist/g' /etc/yum.repos.d/CentOS-Linux-*
sed -i 's|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' /etc/yum.repos.d/CentOS-Linux-*
sudo dnf install centos-release-stream -y
sudo dnf swap centos-{linux,stream}-repos -y
sudo dnf distro-sync -y
sudo yum -y install net-tools # для установки сетевых утилит в том числе ifconfig
curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC="agent --server 'https://192.168.42.110:6443' --token `cat ./k3s_token` --flannel-iface eth1" sh -
# curl -sfL https://get.k3s.io скачка бинарника
# INSTALL_K3S_EXEC="agent --server 'https://192.168.42.110:6443' - установка k3s как агента и устанавливаем кто для агента сервер со стандартным портом 6443
# `cat ./k3s_token` - указываем токен через бэктики и старт через sh
# --flannel-iface eth1 - Означает что у нас будет использоваться в качестве сети для нашего кубернетиса именно eth1, а eth1 это ничто иное как ip 192.168.42.110.
SCRIPT

Vagrant.configure("2") do |config|
  config.vm.box = "centos/8"
  config.vm.box_url = "file:///goinfre/lnoisome/CentOS-8-Vagrant-8.3.2011-20201204.2.x86_64.vagrant-virtualbox.box"
  
  config.vm.define "lnoisomeS" do |control|
    control.vm.hostname = "lnoisomeS"
    control.vm.network "private_network", ip: "192.168.42.110"
    control.vm.provider "virtualbox" do |v|
      v.customize ["modifyvm", :id, "--name", "lnoisomeS"]
      v.customize ["modifyvm", :id, "--memory", "1024"]
      v.customize ["modifyvm", :id, "--cpus", "1"]
      v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      v.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
   end
    control.vm.provision "shell", inline: $master_script
    control.trigger.after [:up, :provision] do |trigger|
      trigger.info = "Copying token"
      trigger.run  = {inline: $ssh_token_script}
    end
   end
   config.vm.define "lnoisomeSW" do |control|
     control.vm.hostname = "lnoisomeSW"
     control.vm.network "private_network", ip: "192.168.42.111"
     control.vm.provider "virtualbox" do |v|
      v.customize ["modifyvm", :id, "--name", "lnoisomeSW"]
      v.customize ["modifyvm", :id, "--cpus", "1"]
      v.customize ["modifyvm", :id, "--memory", "1024"]
      v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      v.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
    end
    control.vm.provision "file", source: "./k3s_token", destination: "./"
    control.vm.provision "shell", inline: $worker_script
  end
end
